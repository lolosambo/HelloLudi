{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.0/font/bootstrap-icons.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="{{ asset('css/comments.css') }}">
    <link href="{{ asset('css/post-content-styles.css') }}" rel="stylesheet">
    <style>
        /* SUPPRESSION FORC√âE DES AVATARS DE COMMENTAIRES */
        .comment-avatar,
        .reply-avatar {
            display: none !important;
            visibility: hidden !important;
            width: 0 !important;
            height: 0 !important;
            margin: 0 !important;
            padding: 0 !important;
        }

        /* Ajustement du header sans avatar */
        .comment-header {
            gap: 0 !important;
        }

        .comment-meta {
            width: 100% !important;
        }

        /* Container principal avec design moderne - couleurs respect√©es */
        .post-detail-container {
            max-width: 1000px;
            margin: 2rem auto;
            background: #f5f4f2;
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(139, 120, 93, 0.2);
            overflow: hidden;
            position: relative;
        }

        .post-detail-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #ff6b6b, #8b785d, #d4c4a8);
        }

        /* Header de l'article */
        .post-header {
            padding: 1rem 1rem 1rem 1rem;
            background: linear-gradient(135deg, #8b785d 0%, #332500 100%);
            color: white;
            position: relative;
            overflow: hidden;
        }

        .post-header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 1px, transparent 1px);
            background-size: 25px 25px;
            animation: floatingDots 20s linear infinite;
        }

        @keyframes floatingDots {
            0% { transform: translate(0, 0); }
            100% { transform: translate(25px, 25px); }
        }

        .post-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
            position: relative;
            z-index: 2;
            color: white;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .post-meta {
            display: flex;
            align-items: center;
            gap: 1.5rem;
            font-size: 1.1rem;
            position: relative;
            z-index: 2;
            margin-bottom: 1rem;
        }

        .post-meta .meta-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            background: rgba(255, 255, 255, 0.15);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        /* Image d'illustration */
        .post-image-section {
            position: relative;
            margin: 0;
            padding: 0;
        }

        .post-image-container {
            position: relative;
            width: 100%;
            height: 400px;
            overflow: hidden;
            background: #f5f4f2;
        }

        .post-featured-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .post-featured-image:hover {
            transform: scale(1.05);
        }

        .image-overlay {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: linear-gradient(transparent, rgba(139, 120, 93, 0.8));
            padding: 2rem;
            transform: translateY(100%);
            transition: transform 0.3s ease;
        }

        .post-image-container:hover .image-overlay {
            transform: translateY(0);
        }

        .image-caption {
            color: white;
            font-weight: 600;
            font-size: 1.1rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }

        .post-content-wrapper {
            padding: 3rem;
            background: #f5f4f2;
        }

        .post-content {
            font-size: 1.2rem;
            line-height: 1.8;
            margin-bottom: 2rem;
            background: white;
            padding: 2.5rem;
            border-radius: 20px;
            box-shadow: 0 10px 25px rgba(139, 120, 93, 0.15);
            position: relative;
            overflow: hidden;
        }

        .post-content::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, #ff6b6b, #8b785d, #d4c4a8);
        }

        /* Galerie d'images */
        .gallery-section {
            padding: 0;
            margin: 0;
            background: #f5f4f2;
        }

        .photo-gallery {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
            gap: 1rem;
            margin-top: 2rem;
            padding: 0;
            background: transparent;
        }

        .gallery-item-display {
            position: relative;
            aspect-ratio: 1;
            border-radius: 15px;
            overflow: hidden;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(139, 120, 93, 0.2);
        }

        .gallery-item-display:hover {
            transform: translateY(-5px) scale(1.02);
            box-shadow: 0 15px 30px rgba(139, 120, 93, 0.3);
        }

        .gallery-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .gallery-item-display:hover .gallery-image {
            transform: scale(1.1);
        }

        .gallery-item-display::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, rgba(255, 107, 107, 0.1), rgba(139, 120, 93, 0.1));
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: 1;
        }

        .gallery-item-display:hover::before {
            opacity: 1;
        }

        .gallery-item-display::after {
            content: 'üîç';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 2rem;
            opacity: 0;
            transition: all 0.3s ease;
            z-index: 2;
            color: white;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }

        .gallery-item-display:hover::after {
            opacity: 1;
            transform: translate(-50%, -50%) scale(1.2);
        }

        /* Actions et contenu apr√®s galerie */
        .post-actions-wrapper {
            padding: 3rem;
            background: #f5f4f2;
        }

        /* Boutons d'action modernes */
        .action-buttons {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
            margin-bottom: 3rem;
        }

        .btn-modern {
            padding: 0.75rem 1.5rem;
            border-radius: 25px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(139, 120, 93, 0.2);
            border: none;
            cursor: pointer;
            font-size: 1rem;
        }

        .btn-modern:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(139, 120, 93, 0.3);
        }

        .btn-salmon {
            background: linear-gradient(45deg, #ff6b6b, #ff5252);
            color: white;
        }

        .btn-brown {
            background: linear-gradient(45deg, #8b785d, #a0926f);
            color: white;
        }

        .btn-success {
            background: linear-gradient(45deg, #ff6b6b, #d63031);
            color: white;
        }

        .btn-primary {
            background: linear-gradient(45deg, #a0926f, #8b785d);
            color: white;
        }

        /* Syst√®me d'√©valuation par √©toiles - couleurs coh√©rentes */
        .rating-section {
            background: linear-gradient(135deg, #d4c4a8, #c7b299);
            padding: 2rem;
            border-radius: 20px;
            margin-bottom: 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
            box-shadow: 0 8px 20px rgba(139, 120, 93, 0.2);
        }

        .rating-section::before {
            content: '‚≠ê';
            position: absolute;
            font-size: 3rem;
            opacity: 0.2;
            top: 10px;
            right: 20px;
            animation: twinkle 2s ease-in-out infinite alternate;
        }

        @keyframes twinkle {
            0% { opacity: 0.2; transform: scale(1); }
            100% { opacity: 0.4; transform: scale(1.1); }
        }

        .rating-section h3 {
            color: #5d4e37;
            margin-bottom: 1rem;
            font-weight: 600;
        }

        .star-rating {
            display: inline-flex;
            gap: 0.5rem;
            margin: 1rem 0;
        }

        .fa-star {
            font-size: 2rem;
            color: #ddd;
            cursor: pointer;
            transition: all 0.3s ease;
            filter: drop-shadow(2px 2px 4px rgba(0,0,0,0.1));
        }

        .fa-star:hover,
        .fa-star.hover {
            color: #ffc107;
            transform: scale(1.2) rotate(5deg);
        }

        .fa-star.selected {
            color: #ff6b6b;
            animation: starPulse 0.5s ease;
        }

        @keyframes starPulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.3); }
            100% { transform: scale(1); }
        }

        .rating-message {
            background: rgba(255, 255, 255, 0.8);
            padding: 1rem;
            border-radius: 15px;
            margin-top: 1rem;
            font-weight: 600;
            color: #5d4e37;
        }

        /* Section commentaires moderne */
        .comments-section {
            background: #e8e3d3;
            padding: 3rem;
            border-radius: 20px;
            margin-top: 2rem;
        }

        .comments-header {
            text-align: center;
            margin-bottom: 3rem;
            position: relative;
        }

        .comments-header h4 {
            font-size: 2rem;
            color: #5d4e37;
            margin-bottom: 0.5rem;
            font-weight: 600;
        }

        .comments-header::after {
            content: '';
            width: 80px;
            height: 4px;
            background: linear-gradient(90deg, #ff6b6b, #8b785d);
            display: block;
            margin: 1rem auto;
            border-radius: 2px;
        }

        /* Commentaires individuels */
        .comment {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 5px 15px rgba(139, 120, 93, 0.15);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .comment::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(180deg, #ff6b6b, #8b785d);
        }

        .comment:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(139, 120, 93, 0.25);
        }

        .comment-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .comment-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(45deg, #8b785d, #a0926f);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 1.2rem;
            box-shadow: 0 3px 10px rgba(139, 120, 93, 0.3);
        }

        .comment-meta {
            flex: 1;
        }

        .comment-author {
            font-weight: 600;
            color: #5d4e37;
            font-size: 1.1rem;
        }

        .comment-date {
            color: #8b785d;
            font-size: 0.9rem;
        }

        .comment-content {
            margin-left: 66px;
            padding: 1rem;
            background: #f9f7f4;
            border-radius: 15px;
            position: relative;
            border: 1px solid #e8e3d3;
        }

        .comment-content::before {
            content: '';
            position: absolute;
            top: 10px;
            left: -10px;
            width: 0;
            height: 0;
            border-top: 10px solid transparent;
            border-bottom: 10px solid transparent;
            border-right: 10px solid #f9f7f4;
        }

        /* R√©ponses aux commentaires */
        .comment-replies {
            margin-left: 66px;
            margin-top: 1rem;
        }

        .reply {
            background: #f0ede6;
            border-radius: 15px;
            padding: 1rem;
            margin-bottom: 1rem;
            position: relative;
            border-left: 3px solid #8b785d;
        }

        .reply-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 0.5rem;
        }

        .reply-avatar {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            background: linear-gradient(45deg, #a0926f, #8b785d);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 0.9rem;
        }

        /* Bouton r√©pondre stylis√© */
        .btn-reply {
            background: linear-gradient(45deg, #8b785d, #a0926f);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 15px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .btn-reply:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(139, 120, 93, 0.4);
            color: white;
        }

        /* Messages vides stylis√©s */
        .empty-comments {
            text-align: center;
            padding: 3rem;
            color: #8b785d;
            background: white;
            border-radius: 20px;
            border: 2px dashed #d4c4a8;
        }

        .empty-comments i {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0.5;
            color: #8b785d;
        }

        /* Modales modernes */
        .modal-content {
            border-radius: 20px;
            border: none;
            box-shadow: 0 20px 40px rgba(139, 120, 93, 0.2);
        }

        .modal-header {
            background: linear-gradient(45deg, #8b785d, #a0926f);
            color: white;
            border-radius: 20px 20px 0 0;
            border-bottom: none;
        }

        .modal-body {
            padding: 2rem;
            background: #f9f7f4;
        }

        .form-group-modal {
            margin-bottom: 1.5rem;
        }

        .form-group-modal label {
            font-weight: 600;
            color: #5d4e37;
            margin-bottom: 0.5rem;
            display: block;
        }

        .form-group-modal .form-control {
            border: 2px solid #d4c4a8;
            border-radius: 10px;
            padding: 0.75rem;
            transition: all 0.3s ease;
            background: white;
        }

        .form-group-modal .form-control:focus {
            border-color: #ff6b6b;
            box-shadow: 0 0 0 0.2rem rgba(255, 107, 107, 0.25);
        }

        /* Messages flash stylis√©s */
        .alert {
            border-radius: 15px;
            border: none;
            padding: 1rem 1.5rem;
            margin-bottom: 1.5rem;
            font-weight: 500;
            box-shadow: 0 5px 15px rgba(139, 120, 93, 0.1);
        }

        .alert-success {
            background: linear-gradient(45deg, #ff6b6b, #ff5252);
            color: white;
        }

        .alert-danger {
            background: linear-gradient(45deg, #8b785d, #5d4e37);
            color: white;
        }

        /* Modale pour les images */
        .image-modal .modal-dialog {
            max-width: 90vw;
            margin: 1rem auto;
            display: flex;
            align-items: center;
            min-height: calc(100vh - 2rem);
        }

        .image-modal .modal-content {
            background: transparent;
            border: none;
            box-shadow: none;
        }

        .image-modal .modal-body {
            padding: 0;
            text-align: center;
            position: relative;
        }

        .image-modal .modal-image {
            max-width: 100%;
            max-height: 80vh;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.8);
            object-fit: contain;
        }

        .image-modal .btn-close {
            position: absolute;
            top: 15px;
            right: 15px;
            z-index: 1060;
            background: rgba(0, 0, 0, 0.7);
            border: 2px solid rgba(255,255,255,0.3);
            border-radius: 50%;
            width: 45px;
            height: 45px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
            transition: all 0.3s ease;
        }

        .image-modal .btn-close:hover {
            background: rgba(255, 107, 107, 0.8);
            transform: scale(1.1);
        }

        .image-modal.show {
            display: block !important;
            background: rgba(0, 0, 0, 0.8);
        }

        .image-modal .modal-backdrop {
            background-color: rgba(0, 0, 0, 0.8);
        }

        /* Responsive */
        @media (max-width: 768px) {
            .post-detail-container {
                margin: 1rem;
                border-radius: 15px;
            }

            .post-header,
            .post-content-wrapper,
            .post-actions-wrapper,
            .comments-section {
                padding: 1.5rem;
            }

            .post-title {
                font-size: 2rem;
            }

            .post-meta {
                flex-direction: column;
                align-items: flex-start;
            }

            .action-buttons {
                flex-direction: column;
            }

            .comment-content,
            .comment-replies {
                margin-left: 0;
            }

            .comment-content::before {
                display: none;
            }

            .post-image-container {
                height: 250px;
            }

            .photo-gallery {
                grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
                gap: 0.5rem;
                margin-top: 1rem;
            }
            
            .gallery-header {
                padding: 1.5rem;
            }
        }

        @media (max-width: 480px) {
            .photo-gallery {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        /* Animations d'apparition */
        .fade-in {
            animation: fadeIn 0.6s ease-out;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Effet de survol pour les √©l√©ments interactifs */
        .interactive:hover {
            transform: scale(1.02);
            transition: all 0.3s ease;
        }
    </style>
{% endblock %}

{% block content %}
    <div class="post-detail-container fade-in">
        {% for type, messages in app.flashes %}
            <div class="flash-messages">
                {% for message in messages %}
                    <div class="alert alert-{{ type }}">
                        <i class="bi bi-{{ type == 'success' ? 'check-circle' : 'exclamation-triangle' }} me-2"></i>
                        {{ message }}
                    </div>
                {% endfor %}
            </div>
        {% endfor %}

        <!-- Header de l'article -->
        <div class="post-header">
            <h1 class="post-title">{{ post.getTitle() }}</h1>
            {% if post.getDate() and post.getPlace() %}
                <div class="post-meta">
                    <div class="meta-item">
                        <i class="bi bi-calendar-event"></i>
                        {{ post.getDate() | date('d/m/Y') }}
                    </div>
                    <div class="meta-item">
                        <i class="bi bi-geo-alt"></i>
                        {{ post.getPlace() }}
                    </div>
                </div>
            {% elseif post.getPersonsNumber() and post.getCookingTime() %}
                <div class="post-meta">
                    <div class="meta-item">
                        <i class="bi bi-people"></i>
                        {{ post.getPersonsNumber() }} personnes
                    </div>
                    <div class="meta-item">
                        <i class="bi bi-clock"></i>
                        {{ post.getCookingTime() }} minutes
                    </div>
                </div>
            {% endif %}
        </div>

        <!-- Image d'illustration -->
        {% if post.getImage() %}
            <div class="post-image-section">
                <div class="post-image-container">
                    <img src="{{ asset(post.getImage()) }}"
                         alt="{{ post.getTitle() }}"
                         class="post-featured-image">
                    <div class="image-overlay">
                        <div class="image-caption">
                            <i class="bi bi-camera-fill me-2"></i>
                            Image d'illustration
                        </div>
                    </div>
                </div>
            </div>
        {% endif %}

        <!-- Contenu de l'article -->
        <div class="post-content-wrapper">
            <div class="post-content">
                {{ post.getContent() | raw }}
            </div>
            
            <!-- Galerie d'images int√©gr√©e pour les posts de type photo -->
            {% if post.category == 'photo' and post.hasGalleryImages() %}
                <div class="photo-gallery">
                    {% for postImage in post.postImages %}
                        <div class="gallery-item-display">
                            <img src="{{ postImage.imageUrl }}" 
                                 alt="{{ postImage.alt ? postImage.alt : 'Image de galerie' }}" 
                                 class="gallery-image"
                                 style="cursor: pointer;"
                                 data-image-src="{{ postImage.imageUrl }}"
                                 data-image-alt="{{ postImage.alt ? postImage.alt : 'Image de galerie' }}">
                        </div>
                    {% endfor %}
                </div>
            {% endif %}
        </div>

        <!-- Actions et contenu apr√®s galerie -->
        <div class="post-actions-wrapper">
            <!-- Boutons d'action -->
            <div class="action-buttons">
                <a href="{{ path("homepage") }}" class="btn-modern btn-salmon interactive">
                    <i class="bi bi-arrow-left-circle"></i>
                    Retour aux articles
                </a>

                <button class="btn-modern btn-brown interactive" data-bs-toggle="modal" data-bs-target="#commentModal">
                    <i class="bi bi-chat-dots"></i>
                    Ajouter un commentaire
                </button>

                {% if app.user and app.user.getid() not in post.getLikes() %}
                    <a href="{{ path("post_like", { "post": post.getId(), "user": app.user.getId()}) }}" class="btn-modern btn-primary interactive">
                        <i class="bi bi-heart"></i>
                        J'aime cet article
                    </a>
                {% endif %}
            </div>

            <!-- Section de notation pour les recettes -->
            {% if post.category == "recipe" %}
                <div class="rating-section">
                    <h3>üí´ Notez cette d√©licieuse recette</h3>
                    <div class="star-rating"
                         data-post-id="{{ post.id }}"
                         data-user-rated="{{ userRated ? 'true' : 'false' }}">
                        {% for i in 1..5 %}
                            <i class="fa fa-star {{ i <= (userRating ?: 0) ? 'selected' : '' }}"
                               data-value="{{ i }}"
                               {% if userRated %}style="pointer-events: none;"{% endif %}>
                            </i>
                        {% endfor %}
                    </div>
                    <div class="rating-message">
                        {% if userRated %}
                            <p><strong>üéâ Merci ! Vous avez donn√© {{ userRating }} √©toile(s)</strong></p>
                        {% endif %}
                        <p><strong>Note moyenne :</strong> {{ post.getAverageRating() }}/5 ‚≠ê</p>
                        <p><strong>Nombre de votes :</strong> {{ post.getRatingCount() }} gourmets</p>
                    </div>
                </div>
            {% endif %}
        </div>

        <!-- Section commentaires -->
        <div class="comments-section">
            <div class="comments-header">
                <h4><i class="bi bi-chat-square-text me-2"></i>Commentaires</h4>
            </div>

            {% if comments is not empty %}
                {% for comment in comments %}
                    <div class="comment fade-in">
                        <div class="comment-header">
                            <div class="comment-avatar">
                                {{ comment.getPseudo()|upper }}
                            </div>
                            <div class="comment-meta">
                                <div class="comment-author">{{ comment.getPseudo() }}</div>
                                <div class="comment-date">
                                    <i class="bi bi-clock me-1"></i>
                                    {{ comment.getCreationDate()|date('d/m/Y √† H:i') }}
                                </div>
                            </div>
                        </div>

                        <div class="comment-content">
                            {{ comment.getContent()|raw }}
                            <div class="mt-3">
                                <button class="btn-reply" data-bs-toggle="modal" data-bs-target="#replyModal-{{ comment.id }}">
                                    <i class="bi bi-reply me-1"></i>
                                    R√©pondre
                                </button>
                            </div>
                        </div>

                        {% if comment.getReplies() is not empty %}
                            <div class="comment-replies">
                                {% for reply in comment.getReplies() %}
                                    <div class="reply">
                                        <div class="reply-header">
                                            <div class="reply-avatar">
                                                {{ reply.getPseudo()|upper }}
                                            </div>
                                            <div>
                                                <strong>{{ reply.getPseudo() }}</strong>
                                                <div class="comment-date">
                                                    <i class="bi bi-clock me-1"></i>
                                                    {{ reply.getCreationDate()|date('d/m/Y √† H:i') }}
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mt-2">
                                            {{ reply.getContent()|raw }}
                                        </div>
                                    </div>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>

                    <!-- Modale pour r√©pondre -->
                    <div class="modal fade" id="replyModal-{{ comment.id }}" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">
                                        <i class="bi bi-reply me-2"></i>
                                        R√©pondre √† {{ comment.getPseudo() }}
                                    </h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    {{ form_start(replyForms[comment.id]) }}
                                    <div class="form-group-modal">
                                        {{ form_label(replyForms[comment.id].pseudo) }}
                                        {{ form_widget(replyForms[comment.id].pseudo, {'attr': {'class': 'form-control'}}) }}
                                        {{ form_errors(replyForms[comment.id].pseudo) }}
                                    </div>
                                    <div class="form-group-modal">
                                        {{ form_label(replyForms[comment.id].content) }}
                                        {{ form_widget(replyForms[comment.id].content, {'attr': {'class': 'form-control', 'rows': '4'}}) }}
                                        {{ form_errors(replyForms[comment.id].content) }}
                                    </div>
                                    <div class="text-center">
                                        <input type="hidden" name="comment[parent]" value="{{ comment.id ?? '' }}">
                                        <button type="submit" class="btn-modern btn-success">
                                            <i class="bi bi-send"></i>
                                            Envoyer la r√©ponse
                                        </button>
                                    </div>
                                    {{ form_end(replyForms[comment.id]) }}
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            {% else %}
                <div class="empty-comments">
                    <i class="bi bi-chat-dots"></i>
                    <h5>Aucun commentaire pour le moment</h5>
                    <p>Soyez le premier √† partager votre avis !</p>
                </div>
            {% endif %}
        </div>
    </div>

    <!-- Modale pour commentaire principal -->
    <div class="modal fade" id="commentModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-plus-circle me-2"></i>
                        Ajouter un commentaire
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    {{ form_start(form) }}
                    <div class="form-group-modal">
                        {{ form_label(form.pseudo) }}
                        {{ form_widget(form.pseudo, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.pseudo) }}
                    </div>
                    <div class="form-group-modal">
                        {{ form_label(form.content) }}
                        {{ form_widget(form.content, {'attr': {'class': 'form-control', 'rows': '5'}}) }}
                        {{ form_errors(form.content) }}
                    </div>
                    <div class="text-center">
                        <input type="hidden" name="comment[parent]" value="{{ comment.id ?? '' }}">
                        <button type="submit" class="btn-modern btn-success">
                            <i class="bi bi-send"></i>
                            Publier le commentaire
                        </button>
                    </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>

    <!-- Modale avec navigation pour afficher les images de la galerie -->
    <div id="imageModal" class="image-modal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.9); z-index: 9999;">
        <div style="display: flex; align-items: center; justify-content: center; width: 100%; height: 100%; position: relative;">
            <!-- Fl√®che pr√©c√©dente -->
            <button id="prevImage" style="position: absolute; left: 30px; top: 50%; transform: translateY(-50%); background: rgba(255,255,255,0.8); border: none; border-radius: 50%; width: 50px; height: 50px; font-size: 24px; cursor: pointer; display: flex; align-items: center; justify-content: center; transition: all 0.3s ease; z-index: 10000;">‚ùÆ</button>
            
            <!-- Image principale -->
            <img id="modalImage" src="" alt="" style="max-width: 85%; max-height: 85%; border-radius: 15px; object-fit: contain; box-shadow: 0 10px 30px rgba(0,0,0,0.8);">
            
            <!-- Fl√®che suivante -->
            <button id="nextImage" style="position: absolute; right: 30px; top: 50%; transform: translateY(-50%); background: rgba(255,255,255,0.8); border: none; border-radius: 50%; width: 50px; height: 50px; font-size: 24px; cursor: pointer; display: flex; align-items: center; justify-content: center; transition: all 0.3s ease; z-index: 10000;">‚ùØ</button>
            
            <!-- Bouton fermer -->
            <button type="button" class="btn-close" style="position: absolute; top: 20px; right: 20px; background: rgba(255,255,255,0.8); border: none; border-radius: 50%; width: 45px; height: 45px; font-size: 20px; cursor: pointer; display: flex; align-items: center; justify-content: center; transition: all 0.3s ease;">&times;</button>
            
            <!-- Compteur d'images -->
            <div id="imageCounter" style="position: absolute; bottom: 30px; left: 50%; transform: translateX(-50%); background: rgba(0,0,0,0.7); color: white; padding: 8px 16px; border-radius: 20px; font-size: 14px; font-weight: 500;"></div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
    /**
     * Galerie photo avec navigation - Version finale
     */
    console.log('üé® Galerie photo - Initialisation');
    
    let currentIndex = 0;
    let images = [];
    
    // Initialisation apr√®s chargement
    setTimeout(() => {
        initGallery();
    }, 500);
    
    function initGallery() {
        // √âl√©ments DOM
        const modal = document.getElementById('imageModal');
        const modalImg = document.getElementById('modalImage');
        const prevBtn = document.getElementById('prevImage');
        const nextBtn = document.getElementById('nextImage');
        const counter = document.getElementById('imageCounter');
        
        // Collecter les images
        const galleryImages = document.querySelectorAll('.gallery-image');
        images = [];
        galleryImages.forEach((img, i) => {
            const src = img.getAttribute('data-image-src') || img.src;
            images.push({ src: src, alt: `Image ${i + 1}` });
        });
        
        if (!images.length) {
            console.log('‚ö†Ô∏è Pas d\'images de galerie trouv√©es');
            return;
        }
        
        console.log(`‚úÖ Galerie initialis√©e avec ${images.length} images`);
        
        // Cr√©er le bouton de fermeture personnalis√©
        const customCloseBtn = createCustomCloseButton();
        
        // Fonctions principales
        function ouvrir(index) {
            currentIndex = index;
            if (modalImg && images[index]) {
                modalImg.src = images[index].src;
                modalImg.alt = images[index].alt;
            }
            if (modal) {
                modal.style.display = 'block';
                modal.style.position = 'fixed';
                modal.style.top = '0';
                modal.style.left = '0';
                modal.style.width = '100%';
                modal.style.height = '100%';
                modal.style.zIndex = '9999';
                document.body.style.overflow = 'hidden';
            }
            if (counter) {
                counter.textContent = `${index + 1} / ${images.length}`;
                counter.style.display = 'block';
            }
            // G√©rer les fl√®ches de navigation
            if (prevBtn) prevBtn.style.display = images.length > 1 ? 'flex' : 'none';
            if (nextBtn) nextBtn.style.display = images.length > 1 ? 'flex' : 'none';
            
            // Afficher le bouton de fermeture
            customCloseBtn.style.display = 'flex';
        }
        
        function fermer() {
            if (modal) {
                modal.style.display = 'none';
                document.body.style.overflow = 'auto';
            }
            customCloseBtn.style.display = 'none';
        }
        
        function precedent() {
            currentIndex = (currentIndex - 1 + images.length) % images.length;
            ouvrir(currentIndex);
        }
        
        function suivant() {
            currentIndex = (currentIndex + 1) % images.length;
            ouvrir(currentIndex);
        }
        
        // Attacher les √©v√©nements sur les miniatures
        const galleryItems = document.querySelectorAll('.gallery-item-display');
        galleryItems.forEach((item, i) => {
            item.style.cursor = 'pointer';
            
            // Effet hover
            item.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-3px) scale(1.02)';
                this.style.transition = 'all 0.3s ease';
            });
            
            item.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0) scale(1)';
            });
            
            // Clic pour ouvrir
            item.addEventListener('click', function(e) {
                e.preventDefault();
                ouvrir(i);
            });
        });
        
        // Navigation avec les fl√®ches
        if (prevBtn) {
            prevBtn.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                precedent();
            });
        }
        
        if (nextBtn) {
            nextBtn.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                suivant();
            });
        }
        
        // Fermer en cliquant sur le fond
        if (modal) {
            modal.addEventListener('click', function(e) {
                if (e.target === this) {
                    fermer();
                }
            });
        }
        
        // Double-clic pour fermer (solution alternative)
        if (modal) {
            modal.addEventListener('dblclick', function(e) {
                fermer();
            });
        }
        
        // Navigation clavier
        document.addEventListener('keydown', function(e) {
            if (modal && modal.style.display === 'block') {
                switch(e.key) {
                    case 'Escape':
                        fermer();
                        break;
                    case 'ArrowLeft':
                        precedent();
                        break;
                    case 'ArrowRight':
                        suivant();
                        break;
                    case ' ':
                        e.preventDefault();
                        suivant();
                        break;
                }
            }
        });
    }
    
    /**
     * Cr√©e un bouton de fermeture personnalis√©
     */
    function createCustomCloseButton() {
        const closeBtn = document.createElement('button');
        closeBtn.innerHTML = '√ó';
        closeBtn.setAttribute('aria-label', 'Fermer la galerie');
        closeBtn.id = 'customGalleryCloseBtn';
        
        // Styles √©l√©gants
        const styles = {
            position: 'fixed',
            top: '20px',
            right: '20px',
            zIndex: '999999',
            width: '50px',
            height: '50px',
            backgroundColor: 'rgba(0, 0, 0, 0.7)',
            color: 'white',
            border: 'none',
            borderRadius: '50%',
            cursor: 'pointer',
            fontSize: '24px',
            fontWeight: 'bold',
            display: 'none',
            alignItems: 'center',
            justifyContent: 'center',
            transition: 'all 0.3s ease',
            boxShadow: '0 2px 10px rgba(0, 0, 0, 0.3)'
        };
        
        Object.assign(closeBtn.style, styles);
        
        // Effets hover
        closeBtn.addEventListener('mouseenter', function() {
            this.style.backgroundColor = 'rgba(255, 69, 69, 0.9)';
            this.style.transform = 'scale(1.1)';
        });
        
        closeBtn.addEventListener('mouseleave', function() {
            this.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';
            this.style.transform = 'scale(1)';
        });
        
        // √âv√©nement de fermeture
        closeBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            // Trouver la fonction fermer dans le scope global
            const modal = document.getElementById('imageModal');
            if (modal) {
                modal.style.display = 'none';
                document.body.style.overflow = 'auto';
            }
            this.style.display = 'none';
        });
        
        // Ajouter au body
        document.body.appendChild(closeBtn);
        
        return closeBtn;
    }
    </script>
{% endblock %}
